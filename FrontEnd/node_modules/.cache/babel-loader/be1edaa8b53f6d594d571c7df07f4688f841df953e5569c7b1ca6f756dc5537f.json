{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emers\\\\Desktop\\\\Meus Projetos\\\\PROJECTS - 2025\\\\TO-DO LIST\\\\FrontEnd\\\\src\\\\Components\\\\HIstory\\\\History.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../../Styles/Components/History/History.module.css\"; // Arquivo CSS Modules\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskHistory = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Simulação de chamada ao banco de dados (substituir por API real)\n    const fetchTasks = async () => {\n      const data = [{\n        id: 1,\n        name: \"Projeto To-Do List\",\n        date: \"16/01/2025 às 19:20\",\n        status: \"todo\"\n      }, {\n        id: 2,\n        name: \"Projeto Back-End\",\n        date: \"18/01/2025 às 12:55\",\n        status: \"inProgress\"\n      }];\n      setTasks(data);\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: \"Hist\\xF3rico de Tarefas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.historyTable,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome da Tarefa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `${styles.status} ${styles[task.status]}`,\n            children: task.status === \"todo\" ? \"A Fazer\" : task.status === \"inProgress\" ? \"Em Andamento\" : \"Concluído\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskHistory, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskHistory;\nexport default TaskHistory;\nvar _c;\n$RefreshReg$(_c, \"TaskHistory\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","TaskHistory","_s","tasks","setTasks","fetchTasks","data","id","name","date","status","className","container","children","header","fileName","_jsxFileName","lineNumber","columnNumber","historyTable","map","task","_c","$RefreshReg$"],"sources":["C:/Users/emers/Desktop/Meus Projetos/PROJECTS - 2025/TO-DO LIST/FrontEnd/src/Components/HIstory/History.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../../Styles/Components/History/History.module.css\"; // Arquivo CSS Modules\r\n\r\nconst TaskHistory = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulação de chamada ao banco de dados (substituir por API real)\r\n    const fetchTasks = async () => {\r\n      const data = [\r\n        { id: 1, name: \"Projeto To-Do List\", date: \"16/01/2025 às 19:20\", status: \"todo\" },\r\n        { id: 2, name: \"Projeto Back-End\", date: \"18/01/2025 às 12:55\", status: \"inProgress\" }\r\n      ];\r\n      setTasks(data);\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>Histórico de Tarefas</div>\r\n      <table className={styles.historyTable}>\r\n        <thead>\r\n          <tr>\r\n            <th>Nome da Tarefa</th>\r\n            <th>Data</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.map((task) => (\r\n            <tr key={task.id}>\r\n              <td>{task.name}</td>\r\n              <td>{task.date}</td>\r\n              <td className={`${styles.status} ${styles[task.status]}`}>\r\n                {task.status === \"todo\" ? \"A Fazer\" : task.status === \"inProgress\" ? \"Em Andamento\" : \"Concluído\"}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}