{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emers\\\\Desktop\\\\Meus Projetos\\\\PROJECTS - 2025\\\\TO-DO LIST\\\\FrontEnd\\\\src\\\\Components\\\\List\\\\ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport styles from '../../Styles/Components/List/ToDoList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  const [columns, setColumns] = useState({\n    toDo: {\n      name: \"A Fazer\",\n      items: [{\n        id: \"1\",\n        content: \"Comprar leite\"\n      }]\n    },\n    inProgress: {\n      name: \"Em Andamento\",\n      items: []\n    },\n    done: {\n      name: \"Concluído\",\n      items: []\n    }\n  });\n  const handleDragEnd = ({\n    source,\n    destination\n  }) => {\n    if (!destination) return;\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    if (source.droppableId === destination.droppableId) {\n      sourceItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        }\n      });\n    } else {\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    }\n  };\n  const handleAddTask = columnId => {\n    const taskContent = prompt(\"Digite a nova tarefa:\");\n    if (!taskContent) return;\n    const newTask = {\n      id: `${Date.now()}`,\n      content: taskContent\n    };\n    const updatedColumn = {\n      ...columns[columnId],\n      items: [...columns[columnId].items, newTask]\n    };\n    setColumns({\n      ...columns,\n      [columnId]: updatedColumn\n    });\n  };\n  const handleRemoveTask = (columnId, taskId) => {\n    const updatedColumn = {\n      ...columns[columnId],\n      items: columns[columnId].items.filter(item => item.id !== taskId)\n    };\n    setColumns({\n      ...columns,\n      [columnId]: updatedColumn\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Pai,\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: Object.entries(columns).map(([columnId, column]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Sections,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.SectionsNames,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [column.name, \" (\", column.items.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTask(columnId),\n            className: \"add-button\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: columnId,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            className: \"droppable-area\",\n            children: [column.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"task\",\n                children: [item.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveTask(columnId, item.id),\n                  className: \"remove-button\",\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, columnId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"TrqmDgamwysa1+kTJe95mzXOM2s=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["DragDropContext","Droppable","Draggable","React","useRef","useState","useEffect","styles","jsxDEV","_jsxDEV","TodoList","_s","columns","setColumns","toDo","name","items","id","content","inProgress","done","handleDragEnd","source","destination","sourceColumn","droppableId","destColumn","sourceItems","destItems","removed","splice","index","handleAddTask","columnId","taskContent","prompt","newTask","Date","now","updatedColumn","handleRemoveTask","taskId","filter","item","className","Pai","children","onDragEnd","Object","entries","map","column","Sections","SectionsNames","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/emers/Desktop/Meus Projetos/PROJECTS - 2025/TO-DO LIST/FrontEnd/src/Components/List/ToDoList.jsx"],"sourcesContent":["import { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport styles from '../../Styles/Components/List/ToDoList.module.css';\r\n\r\nexport default function TodoList() {\r\n  const [columns, setColumns] = useState({\r\n    toDo: {\r\n      name: \"A Fazer\",\r\n      items: [{ id: \"1\", content: \"Comprar leite\" }],\r\n    },\r\n    inProgress: {\r\n      name: \"Em Andamento\",\r\n      items: [],\r\n    },\r\n    done: {\r\n      name: \"Concluído\",\r\n      items: [],\r\n    },\r\n  });\r\n\r\n  const handleDragEnd = ({ source, destination }) => {\r\n    if (!destination) return;\r\n\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: { ...sourceColumn, items: sourceItems },\r\n      });\r\n    } else {\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: { ...sourceColumn, items: sourceItems },\r\n        [destination.droppableId]: { ...destColumn, items: destItems },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddTask = (columnId) => {\r\n    const taskContent = prompt(\"Digite a nova tarefa:\");\r\n    if (!taskContent) return;\r\n\r\n    const newTask = { id: `${Date.now()}`, content: taskContent };\r\n    const updatedColumn = {\r\n      ...columns[columnId],\r\n      items: [...columns[columnId].items, newTask],\r\n    };\r\n\r\n    setColumns({ ...columns, [columnId]: updatedColumn });\r\n  };\r\n\r\n  const handleRemoveTask = (columnId, taskId) => {\r\n    const updatedColumn = {\r\n      ...columns[columnId],\r\n      items: columns[columnId].items.filter(item => item.id !== taskId),\r\n    };\r\n\r\n    setColumns({ ...columns, [columnId]: updatedColumn });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Pai}>\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        {Object.entries(columns).map(([columnId, column]) => (\r\n          <div key={columnId} className={styles.Sections}>\r\n            <div className={styles.SectionsNames}>\r\n              <h2>{column.name} ({column.items.length})</h2>\r\n              <button onClick={() => handleAddTask(columnId)} className=\"add-button\">+</button>\r\n            </div>\r\n            <Droppable droppableId={columnId}>\r\n              {(provided) => (\r\n                <div\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                  className=\"droppable-area\"\r\n                >\r\n                  {column.items.map((item, index) => (\r\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          className=\"task\"\r\n                        >\r\n                          {item.content}\r\n                          <button onClick={() => handleRemoveTask(columnId, item.id)} className=\"remove-button\">x</button>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        ))}\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}