{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emers\\\\Desktop\\\\Meus Projetos\\\\PROJECTS - 2025\\\\TO-DO LIST\\\\FrontEnd\\\\src\\\\Components\\\\List\\\\ToDoList.jsx\";\nimport { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport styles from '../../Styles/Components/List/ToDoList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  const handleDragEnd = ({\n    source,\n    destination\n  }) => {\n    if (!destination) return;\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    if (source.droppableId === destination.droppableId) {\n      sourceItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        }\n      });\n    } else {\n      destItems.splice(destination.index, 0, removed);\n      setColumns({\n        ...columns,\n        [source.droppableId]: {\n          ...sourceColumn,\n          items: sourceItems\n        },\n        [destination.droppableId]: {\n          ...destColumn,\n          items: destItems\n        }\n      });\n    }\n  };\n  const handleAddTask = columnId => {\n    const taskContent = prompt(\"Digite a nova tarefa:\");\n    if (!taskContent) return;\n    const newTask = {\n      id: `${Date.now()}`,\n      content: taskContent\n    };\n    const updatedColumn = {\n      ...columns[columnId],\n      items: [...columns[columnId].items, newTask]\n    };\n    setColumns({\n      ...columns,\n      [columnId]: updatedColumn\n    });\n  };\n  const handleRemoveTask = (columnId, taskId) => {\n    const updatedColumn = {\n      ...columns[columnId],\n      items: columns[columnId].items.filter(item => item.id !== taskId)\n    };\n    setColumns({\n      ...columns,\n      [columnId]: updatedColumn\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Pai,\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: Object.entries(columns).map(([columnId, column]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.Sections,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.SectionsName,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [column.name, \" (\", column.items.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddTask(columnId),\n            className: \"add-button\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: columnId,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            className: \"droppable-area\",\n            children: [column.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"task\",\n                children: [item.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRemoveTask(columnId, item.id),\n                  className: \"remove-button\",\n                  children: \"x\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, columnId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["DragDropContext","Droppable","Draggable","React","useRef","useState","useEffect","styles","jsxDEV","_jsxDEV","TodoList","handleDragEnd","source","destination","sourceColumn","columns","droppableId","destColumn","sourceItems","items","destItems","removed","splice","index","setColumns","handleAddTask","columnId","taskContent","prompt","newTask","id","Date","now","content","updatedColumn","handleRemoveTask","taskId","filter","item","className","Pai","children","onDragEnd","Object","entries","map","column","Sections","SectionsName","name","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/emers/Desktop/Meus Projetos/PROJECTS - 2025/TO-DO LIST/FrontEnd/src/Components/List/ToDoList.jsx"],"sourcesContent":["import { DragDropContext, Droppable, Draggable } from \"@hello-pangea/dnd\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport styles from '../../Styles/Components/List/ToDoList.module.css';\r\n\r\nexport default function TodoList() {\r\n \r\n\r\n  const handleDragEnd = ({ source, destination }) => {\r\n    if (!destination) return;\r\n\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = [...destColumn.items];\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      sourceItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: { ...sourceColumn, items: sourceItems },\r\n      });\r\n    } else {\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: { ...sourceColumn, items: sourceItems },\r\n        [destination.droppableId]: { ...destColumn, items: destItems },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddTask = (columnId) => {\r\n    const taskContent = prompt(\"Digite a nova tarefa:\");\r\n    if (!taskContent) return;\r\n\r\n    const newTask = { id: `${Date.now()}`, content: taskContent };\r\n    const updatedColumn = {\r\n      ...columns[columnId],\r\n      items: [...columns[columnId].items, newTask],\r\n    };\r\n\r\n    setColumns({ ...columns, [columnId]: updatedColumn });\r\n  };\r\n\r\n  const handleRemoveTask = (columnId, taskId) => {\r\n    const updatedColumn = {\r\n      ...columns[columnId],\r\n      items: columns[columnId].items.filter(item => item.id !== taskId),\r\n    };\r\n\r\n    setColumns({ ...columns, [columnId]: updatedColumn });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Pai}>\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        {Object.entries(columns).map(([columnId, column]) => (\r\n          <div key={columnId} className={styles.Sections}>\r\n            <div className={styles.SectionsName}>\r\n              <h2>{column.name} ({column.items.length})</h2>\r\n              <button onClick={() => handleAddTask(columnId)} className=\"add-button\">+</button>\r\n            </div>\r\n            <Droppable droppableId={columnId}>\r\n              {(provided) => (\r\n                <div\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                  className=\"droppable-area\"\r\n                >\r\n                  {column.items.map((item, index) => (\r\n                    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          className=\"task\"\r\n                        >\r\n                          {item.content}\r\n                          <button onClick={() => handleRemoveTask(columnId, item.id)} className=\"remove-button\">x</button>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        ))}\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}